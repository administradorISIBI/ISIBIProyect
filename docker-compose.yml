services:
 # base de datos
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./seeders:/docker-entrypoint-initdb.d/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: on-failure

  universervice:
      build:
        context: ./universities-service
        dockerfile: Dockerfile
      ports:
        - "8003:8003"
      volumes:
        - ./universities-service:/app  # Monta el código fuente para observar cambios
      command: uvicorn app.main:app --host 0.0.0.0 --port 8003 --reload
      restart: on-failure
      
  # microservicio de crawling
  crawler:
    build:
      context: ./crawler-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./crawler-service:/app  # Monta el código fuente para observar cambios
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    restart: on-failure

  usersservice:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./users-service:/app  # Monta el código fuente para observar cambios
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    restart: on-failure

  # servicio principal
  main:
    build:
      context: ./main-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - crawler
      - universervice
      - mongodb
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./main-service:/app  # Monta el código fuente para observar cambios
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # balanceador de carga
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - main
  
  #Aplicación Front-End
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./app:/app 
      - /app/node_modules
    restart: on-failure

volumes:
  mongo_data:
